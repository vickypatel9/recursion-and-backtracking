


class Solution {
    public static void combinations(int index,List<List<Integer>>ans,int []candidates,int target,List<Integer>ds){
        if(index==candidates.length){
            if(target==0){
                ans.add(new ArrayList<>(ds));
            }
            return;
        }
        if(candidates[index]<=target){
            ds.add(candidates[index]);
            combinations(index,ans,candidates,target-candidates[index],ds);
            ds.remove(ds.size()-1);
        }
        combinations(index+1,ans,candidates,target,ds);
    }
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>>ans=new ArrayList<>();
        combinations(0,ans,candidates,target,new ArrayList<>());
        return ans;
    }
}
